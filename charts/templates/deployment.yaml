apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: backend
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - backend
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          env:
            - name: DB_HOST
              value: {{ .Values.env.DB_HOST | quote }}
            - name: DB_PORT
              value: {{ .Values.env.DB_PORT | quote }}
            - name: DB_NAME
              value: {{ .Values.env.DB_NAME | quote }}
            - name: MYSQL_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: MYSQL_ROOT_USER
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: backend-secret
                  key: MYSQL_ROOT_PASSWORD
          ports:
            - name: http
              containerPort: 8080
#            - name: https
#              containerPort: 8443
